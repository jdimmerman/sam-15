{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PIECES_COUNT","getNextDiff","lastDiff","Math","random","getHeightArray","pieces","diff","i","push","App","React","useState","movementRate","setMovementRate","asteroidRate","setAsteroidRate","meSize","setMeSize","ceilArray","setCeilArray","floorArray","setFloorArray","meTop","setMeTop","meLeft","setMeLeft","upPress","useKeyPress","downPress","leftPress","rightPress","asteroids","setAsteroids","tickRef","useRef","intervalRef","death","setDeath","showDeathWarning","useMemo","prettyLady","setPrettyLady","prettyLadyResponse","setPrettyLadyResponse","prettyLadySuccess","setPrettyLadySuccess","checkPrettyLady","useCallback","sanitizedPrettyLady","trim","toLowerCase","replace","updateFloorOrCeil","prevArray","length","newArray","slice","getNextCielAndFloor","moveMe","prevMeTop","ME_DIFF","prevMeLeft","maybeMakeAsteroid","prevAsteroids","top","width","height","left","moveAsteroids","newAsteroids","prevAsteroid","newLeft","checkIfMeDied","deathBlocks","document","querySelectorAll","meBound","querySelector","getBoundingClientRect","blockBound","right","bottom","useEffect","current","setInterval","clearInterval","ceil","prev","className","style","display","onSubmit","e","preventDefault","onChange","target","value","type","onClick","window","location","reload","opacity","floor","map","a","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af8c52ba.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nconst PIECES_COUNT = 500;\nconst DIFF_THRESHOLD = 2;\nconst ME_DIFF = 3;\nconst TICK_RATE = 30;\nconst INITIAL_MOVEMENT_RATE = 2;\nconst TICK_DIV_TO_TIME = 20;\nconst SUCCESS_TIME = 3;\n\nconst getNextDiff = (lastDiff) => {\n  if (lastDiff > 60) { \n    lastDiff = lastDiff - Math.random() * DIFF_THRESHOLD;\n  } else if (lastDiff < -40) {\n    lastDiff = lastDiff + Math.random() * DIFF_THRESHOLD;\n  } else {\n    lastDiff = lastDiff + Math.random() * DIFF_THRESHOLD * 2 - DIFF_THRESHOLD;\n  }\n  return lastDiff;\n}\n\nconst getHeightArray = (existing = 0) => {\n  const pieces = [];\n  let diff = 0;\n  for (let i = 0; i < PIECES_COUNT; i++) {\n    diff = getNextDiff(diff);\n    pieces.push(diff)\n  }\n  return pieces;\n}\n\nfunction App() {\n  const [movementRate, setMovementRate] = React.useState(INITIAL_MOVEMENT_RATE);\n  const [asteroidRate, setAsteroidRate] = React.useState(.05);\n  const [meSize, setMeSize] = React.useState(15);\n  const [ceilArray, setCeilArray] = React.useState(getHeightArray());\n  const [floorArray, setFloorArray] = React.useState(getHeightArray());\n  const [meTop, setMeTop] = React.useState(50);\n  const [meLeft, setMeLeft] = React.useState(100);\n  const upPress = useKeyPress(\"ArrowUp\");\n  const downPress = useKeyPress(\"ArrowDown\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const [asteroids, setAsteroids] = React.useState([]);\n  const tickRef = React.useRef(1);\n  const intervalRef = React.useRef();\n  const [death, setDeath] = React.useState(false);\n  const showDeathWarning = React.useMemo(() => death, [death]);\n  const [prettyLady, setPrettyLady] = React.useState('');\n  const [prettyLadyResponse, setPrettyLadyResponse] = React.useState('');\n  const [prettyLadySuccess, setPrettyLadySuccess] = React.useState(false);\n\n  const checkPrettyLady = React.useCallback(() => {\n    const sanitizedPrettyLady = prettyLady.trim().toLowerCase().replace(/\\s+/g, '');\n    if (sanitizedPrettyLady === 'siena') {\n      setPrettyLadyResponse('Yep.');\n      setPrettyLadySuccess(true);\n      return;\n    }\n    if (sanitizedPrettyLady === 'frog' || sanitizedPrettyLady === 'frogbog') {\n      setPrettyLadySuccess(true);\n      setPrettyLadyResponse('You even got the name right.');\n      return;\n    }\n    if (sanitizedPrettyLady === 'ruby') {\n      setPrettyLadySuccess(true);\n      setPrettyLadyResponse(\"I'll take it.\");\n      return;\n    }\n    if (sanitizedPrettyLady === 'rosa') {\n      setPrettyLadySuccess(true);\n      setPrettyLadyResponse(\"Yeah she know it.\");\n      return;\n    }\n    if (sanitizedPrettyLady === 'grainne') {\n      setPrettyLadyResponse(\"Oof. You've put me in a tough position. But, like, come on.... Try again\");\n    }\n    setPrettyLadyResponse('Try again');\n    setPrettyLadySuccess(false);\n  }, [prettyLady]);\n\n  const updateFloorOrCeil = React.useCallback(prevArray => {\n  const lastDiff = prevArray[prevArray.length - 1];\n  const newArray = [...prevArray.slice(movementRate)]\n  for (let i = 0; i < movementRate; i++) {\n    newArray.push(getNextDiff(lastDiff));\n  }\n  return newArray;\n}, [movementRate]);\n\n  const getNextCielAndFloor = React.useCallback(() => {\n    setCeilArray(updateFloorOrCeil);\n    setFloorArray(updateFloorOrCeil);\n  }, [updateFloorOrCeil]);\n  const moveMe = React.useCallback(() => {\n    if (upPress !== downPress) {\n      setMeTop(prevMeTop => upPress ? prevMeTop - ME_DIFF * 1.5 : prevMeTop + ME_DIFF * 1.5);\n    }\n    if (leftPress !== rightPress) {\n      setMeLeft(prevMeLeft => leftPress ? prevMeLeft - ME_DIFF * 1.5 : prevMeLeft + ME_DIFF * 1.5);\n    }\n  }, [downPress, leftPress, rightPress, upPress]);\n  const maybeMakeAsteroid = React.useCallback(() => {\n    if (Math.random() < asteroidRate) {\n      setAsteroids(prevAsteroids => {\n        const top = 20 + Math.random() * 60;\n        const width = Math.random() * 10 + 5;\n        const height = Math.random() * 50 + 5\n        const newA = [...prevAsteroids, {top, height, width, left: 100}];\n        return newA;\n      });\n    }\n  }, [asteroidRate]);\n  const moveAsteroids = React.useCallback(() => {\n    setAsteroids(prevAsteroids => {\n      const newAsteroids = [];\n      for (const prevAsteroid of prevAsteroids) {\n        const newLeft = prevAsteroid.left - 100/PIECES_COUNT * movementRate;\n        if (newLeft < 0 - prevAsteroid.width) {\n          continue;\n        }\n        newAsteroids.push({...prevAsteroid, left: newLeft})\n      }\n      return newAsteroids;\n    })\n  }, [movementRate]);\n  const checkIfMeDied = React.useCallback(() => {\n    const deathBlocks = document.querySelectorAll('.piece, .asteroid');\n    const me = document.querySelector('.me');\n    const meBound = me.getBoundingClientRect();\n    if (meLeft < 0) {\n      setDeath(true);\n      // TODO also if move too far right, die\n      return;\n    }\n    for (const deathBlock of deathBlocks) {\n      const blockBound = deathBlock.getBoundingClientRect();\n      const overlap = !(meBound.right < blockBound.left || \n        meBound.left > blockBound.right || \n        meBound.bottom < blockBound.top || \n        meBound.top > blockBound.bottom\n      );\n      if (overlap) {\n        setDeath(true);\n      }\n    }\n  }, [meLeft]);\n  React.useEffect(() => {\n    intervalRef.current = setInterval(() => {\n      if (death) {\n        clearInterval(intervalRef.current);\n        return;\n      }\n      tickRef.current = tickRef.current + 1;\n      setMovementRate(INITIAL_MOVEMENT_RATE + Math.ceil(tickRef.current * TICK_RATE / 4000));\n      setAsteroidRate(prev => prev + 0.0001);\n      setMeSize(prev => prev + 0.1);\n      getNextCielAndFloor();\n      moveMe();\n      moveAsteroids();\n      maybeMakeAsteroid();\n      checkIfMeDied();\n    }, TICK_RATE);\n    return () => clearInterval(intervalRef.current);\n  }, [checkIfMeDied, death, getNextCielAndFloor, maybeMakeAsteroid, moveAsteroids, moveMe]);\n\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"you-died\" style={{display: showDeathWarning ? 'block' : 'none'}}>\n        You died!\n        {tickRef.current / TICK_DIV_TO_TIME > SUCCESS_TIME && (\n          <>\n            <span> You did OK though. So riddle me this: <b>Who is the prettiest girl you know?</b></span><br/>\n            <form onSubmit={(e) => { e.preventDefault(); return false;}}>\n              <input onChange={(e) => setPrettyLady(e.target.value)} value={prettyLady} />\n              <button type=\"submit\" onClick={checkPrettyLady}>Submit</button>\n            </form>\n            <div><i>{prettyLadyResponse}</i></div>\n          </>\n        )}\n        {tickRef.current / TICK_DIV_TO_TIME <= SUCCESS_TIME && (\n          <>\n            <span> Not great.</span>\n            <button onClick={() => window.location.reload()}>Restart</button>\n          </>\n        )}\n      </div>\n      <div className=\"next-clue\" style={{opacity: prettyLadySuccess ? '1' : '0'}}>\n        Your next clue: blah blah blah TBD\n      </div>\n      <div className=\"clock\">\n        {Math.floor(tickRef.current / TICK_DIV_TO_TIME)}\n      </div>\n      <div className=\"ceiling\">\n        {ceilArray.map((diff, i) => <div key={i} className=\"piece\" style={{width: `${100/PIECES_COUNT}%`, height: `${100 - diff}%`}} />)}\n      </div>\n      <div className=\"center\">\n        <div className=\"me\" style={{width: meSize, height: meSize, top: meTop, left: meLeft}} />\n        {asteroids.map((a, i) => <div key={i} className=\"asteroid\" style={{\n          top: `${a.top}%`,\n          left: `${a.left}%`,\n          width: a.width,\n          height: a.height,\n        }} />)}\n      </div>\n      <div className=\"floor\">\n        {floorArray.map((diff, i) => <div key={i} className=\"piece\" style={{width: `${100/PIECES_COUNT}%`, height: `${100 - diff}%`}} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\nfunction useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = React.useState(false);\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n  // Add event listeners\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n  return keyPressed;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}