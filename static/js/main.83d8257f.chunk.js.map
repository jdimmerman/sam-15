{"version":3,"sources":["darth-siena.png","light-siena.png","grainne.png","ruby.png","App.js","reportWebVitals.js","index.js"],"names":["urlParams","URLSearchParams","window","location","search","PIECES_COUNT","SUCCESS_TIME","get","MOVEMENT_ACCELERATION_CONST","App","React","useState","cielingHeight","setCielingHeight","getNextDiff","useCallback","lastDiff","Math","random","getHeightArray","pieces","diff","i","push","movementRate","setMovementRate","asteroidRate","setAsteroidRate","meSize","setMeSize","ceilArray","setCeilArray","floorArray","setFloorArray","meTop","setMeTop","meLeft","setMeLeft","upPress","useKeyPress","downPress","leftPress","rightPress","asteroids","setAsteroids","tickRef","useRef","intervalRef","death","setDeath","showDeathWarning","useMemo","prettyLady","setPrettyLady","prettyLadyResponse","setPrettyLadyResponse","prettyLadySuccess","setPrettyLadySuccess","startPromptShowing","setStartPromptShowing","checkPrettyLady","sanitizedPrettyLady","trim","toLowerCase","replace","updateFloorOrCeil","prevArray","length","newArray","slice","getNextCielAndFloor","moveMe","prevMeTop","prevMeLeft","ME_DIFF","maybeMakeAsteroid","prevAsteroids","top","size","imageNum","image","grainne","lightSiena","darthSiena","left","moveAsteroids","newAsteroids","prevAsteroid","newLeft","width","checkIfMeDied","deathBlocks","document","querySelectorAll","meBound","querySelector","getBoundingClientRect","blockBound","right","bottom","useEffect","current","setInterval","clearInterval","ceil","prev","className","style","display","onSubmit","e","preventDefault","onChange","target","value","type","onClick","reload","opacity","pointerEvents","floor","map","height","src","ruby","alt","a","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83d8257f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/darth-siena.db68d2e1.png\";","export default __webpack_public_path__ + \"static/media/light-siena.3bee5c62.png\";","export default __webpack_public_path__ + \"static/media/grainne.ef132bd0.png\";","export default __webpack_public_path__ + \"static/media/ruby.ab404e88.png\";","import './App.css';\nimport React from 'react';\nimport darthSiena from './darth-siena.png';\nimport lightSiena from './light-siena.png';\nimport grainne from './grainne.png';\nimport ruby from './ruby.png';\n\nconst urlParams = new URLSearchParams(window.location.search);\n\nconst PIECES_COUNT = 500;\nconst DIFF_THRESHOLD = 2;\nconst ME_DIFF = 10; // me movement rate as compared to other movement\nconst TICK_RATE = 30;\nconst INITIAL_MOVEMENT_RATE = 2;\nconst TICK_DIV_TO_TIME = 20;\nconst SUCCESS_TIME = urlParams.get('successAt') || 60;\nconst MOVEMENT_ACCELERATION_CONST = urlParams.get('movementAcc') || 4000;\n\nfunction App() {\n  const [cielingHeight, setCielingHeight] = React.useState(60);\n\n  const getNextDiff = React.useCallback((lastDiff) => {\n    if (lastDiff > cielingHeight) { \n      lastDiff = lastDiff - Math.random() * DIFF_THRESHOLD;\n    } else if (lastDiff < cielingHeight - 100) {\n      lastDiff = lastDiff + Math.random() * DIFF_THRESHOLD;\n    } else {\n      lastDiff = lastDiff + Math.random() * DIFF_THRESHOLD * 2 - DIFF_THRESHOLD;\n    }\n    return lastDiff;\n  }, [cielingHeight]);\n\n  const getHeightArray = React.useCallback(() => {\n    const pieces = [];\n    let diff = 0;\n    for (let i = 0; i < PIECES_COUNT; i++) {\n      diff = getNextDiff(diff);\n      pieces.push(diff)\n    }\n    return pieces;\n  }, [getNextDiff]);\n\n  const [movementRate, setMovementRate] = React.useState(INITIAL_MOVEMENT_RATE);\n  const [asteroidRate, setAsteroidRate] = React.useState(.05);\n  const [meSize, setMeSize] = React.useState(15);\n  const [ceilArray, setCeilArray] = React.useState(getHeightArray());\n  const [floorArray, setFloorArray] = React.useState(getHeightArray());\n  const [meTop, setMeTop] = React.useState(50);\n  const [meLeft, setMeLeft] = React.useState(100);\n  const upPress = useKeyPress(\"ArrowUp\");\n  const downPress = useKeyPress(\"ArrowDown\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const [asteroids, setAsteroids] = React.useState([]);\n  const tickRef = React.useRef(1);\n  const intervalRef = React.useRef();\n  const [death, setDeath] = React.useState(false);\n  const showDeathWarning = React.useMemo(() => death, [death]);\n  const [prettyLady, setPrettyLady] = React.useState('');\n  const [prettyLadyResponse, setPrettyLadyResponse] = React.useState('');\n  const [prettyLadySuccess, setPrettyLadySuccess] = React.useState(false);\n  const [startPromptShowing, setStartPromptShowing] = React.useState(true);\n\n  const checkPrettyLady = React.useCallback(() => {\n    const sanitizedPrettyLady = prettyLady.trim().toLowerCase().replace(/\\s+/g, '');\n    if (sanitizedPrettyLady === 'frog' || sanitizedPrettyLady === 'frogbog') {\n      setPrettyLadySuccess(true);\n      setPrettyLadyResponse('Yep.');\n      return;\n    }\n    if (sanitizedPrettyLady === 'ruby') {\n      setPrettyLadySuccess(true);\n      setPrettyLadyResponse(\"Not what we were looking for, but I'll take it.\");\n      return;\n    }\n    if (sanitizedPrettyLady === 'rosa') {\n      setPrettyLadySuccess(true);\n      setPrettyLadyResponse(\"Yeah she know it.\");\n      return;\n    }\n    if (sanitizedPrettyLady === 'siena') {\n      setPrettyLadyResponse('Use her proper name.');\n      setPrettyLadySuccess(false);\n      return;\n    }\n    if (sanitizedPrettyLady === 'grainne') {\n      setPrettyLadyResponse(\"Oof. You've put me in a tough position. But, like, come on.... Try again\");\n      setPrettyLadySuccess(false);\n      return;\n    }\n    setPrettyLadyResponse('Try again');\n    setPrettyLadySuccess(false);\n  }, [prettyLady]);\n\n  const updateFloorOrCeil = React.useCallback(prevArray => {\n  const lastDiff = prevArray[prevArray.length - 1];\n  const newArray = [...prevArray.slice(movementRate)]\n  for (let i = 0; i < movementRate; i++) {\n    newArray.push(getNextDiff(lastDiff));\n  }\n  return newArray;\n}, [getNextDiff, movementRate]);\n\n  const getNextCielAndFloor = React.useCallback(() => {\n    setCeilArray(updateFloorOrCeil);\n    setFloorArray(updateFloorOrCeil);\n  }, [updateFloorOrCeil]);\n  const moveMe = React.useCallback(() => {\n    if (upPress !== downPress) {\n      setMeTop(prevMeTop => upPress ? prevMeTop - ME_DIFF : prevMeTop + ME_DIFF);\n    }\n    if (leftPress !== rightPress) {\n      setMeLeft(prevMeLeft => leftPress ? prevMeLeft - ME_DIFF * 1.5 : prevMeLeft + ME_DIFF);\n    }\n  }, [downPress, leftPress, rightPress, upPress]);\n  const maybeMakeAsteroid = React.useCallback(() => {\n    if (Math.random() < asteroidRate) {\n      setAsteroids(prevAsteroids => {\n        const top = Math.random() * 80 + 10;\n        const size = Math.random() * 25 + 5;\n        const imageNum = Math.random() * 3;\n        const image = imageNum > 2 ? grainne : imageNum > 1 ? lightSiena : darthSiena;\n        const newA = [...prevAsteroids, {top, size, left: 100, image}];\n        return newA;\n      });\n    }\n  }, [asteroidRate]);\n  const moveAsteroids = React.useCallback(() => {\n    setAsteroids(prevAsteroids => {\n      const newAsteroids = [];\n      for (const prevAsteroid of prevAsteroids) {\n        const newLeft = prevAsteroid.left - 100/PIECES_COUNT * movementRate;\n        if (newLeft < 0 - prevAsteroid.width) {\n          continue;\n        }\n        newAsteroids.push({...prevAsteroid, left: newLeft})\n      }\n      return newAsteroids;\n    })\n  }, [movementRate]);\n  const checkIfMeDied = React.useCallback(() => {\n    const deathBlocks = document.querySelectorAll('.piece, .asteroid');\n    const me = document.querySelector('.me');\n    const meBound = me.getBoundingClientRect();\n    if (meLeft < 0) {\n      setDeath(true);\n      // TODO also if move too far right, die\n      return;\n    }\n    for (const deathBlock of deathBlocks) {\n      const blockBound = deathBlock.getBoundingClientRect();\n      const overlap = !(meBound.right < blockBound.left || \n        meBound.left > blockBound.right || \n        meBound.bottom < blockBound.top || \n        meBound.top > blockBound.bottom\n      );\n      if (overlap) {\n        setDeath(true);\n      }\n    }\n  }, [meLeft]);\n  React.useEffect(() => {\n    if (startPromptShowing) {\n      return;\n    }\n    intervalRef.current = setInterval(() => {\n      if (death) {\n        clearInterval(intervalRef.current);\n        return;\n      }\n      tickRef.current = tickRef.current + 1;\n      setMovementRate(INITIAL_MOVEMENT_RATE + Math.ceil(tickRef.current * TICK_RATE / MOVEMENT_ACCELERATION_CONST));\n      setAsteroidRate(prev => prev + 0.0002);\n      setMeSize(prev => {\n        return prev + 0.02;\n      });\n      setCielingHeight(prev => {\n        return prev - 0.1;\n      })\n      getNextCielAndFloor();\n      moveMe();\n      moveAsteroids();\n      maybeMakeAsteroid();\n      checkIfMeDied();\n    }, TICK_RATE);\n    return () => clearInterval(intervalRef.current);\n  }, [checkIfMeDied, death, getNextCielAndFloor, maybeMakeAsteroid, moveAsteroids, moveMe, startPromptShowing]);\n\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"you-died\" style={{display: showDeathWarning ? 'block' : 'none'}}>\n        You died!\n        {tickRef.current / TICK_DIV_TO_TIME > SUCCESS_TIME && (\n          <>\n            <span> You did OK though. So riddle me this: <b>Who is the prettiest girl you know?</b></span><br/>\n            <form onSubmit={(e) => { e.preventDefault(); return false;}}>\n              <input onChange={(e) => setPrettyLady(e.target.value)} value={prettyLady} />\n              <button type=\"submit\" onClick={checkPrettyLady}>Submit</button>\n            </form>\n            <div><i>{prettyLadyResponse}</i></div>\n          </>\n        )}\n        {tickRef.current / TICK_DIV_TO_TIME <= SUCCESS_TIME && (\n          <>\n            <span> Not great.</span><br />\n            <button onClick={() => window.location.reload()}>Restart</button>\n          </>\n        )}\n      </div>\n      <div className=\"next-clue\" style={{opacity: prettyLadySuccess ? '1' : '0'}}>\n        Your next clue: blah blah blah TBD\n      </div>\n      <div\n        className=\"start-prompt\"\n        style={{pointerEvents: startPromptShowing ? 'initial' : 'none' ,opacity: startPromptShowing ? '1' : '0'}}\n      >\n        Surivie to 60 for a clue.\n        <br /><br />\n        <button onClick={() => setStartPromptShowing(false)}>I'll try but I'm not as good as Jason</button>\n        <br />\n        (Use arrow keys.)\n      </div>\n      <div className=\"clock\">\n        {Math.floor(tickRef.current / TICK_DIV_TO_TIME)}\n      </div>\n      <div className=\"ceiling\">\n        {ceilArray.map((diff, i) => <div key={i} className=\"piece\" style={{width: `${100/PIECES_COUNT}%`, height: `${100 - diff}%`}} />)}\n      </div>\n      <div className=\"center\">\n        <div className=\"me\" style={{width: meSize, height: meSize, top: meTop, left: meLeft}}>\n          <img src={ruby} alt='' />\n        </div>\n        {asteroids.map((a, i) => <div key={i} className=\"asteroid\" style={{\n          top: `${a.top}%`,\n          left: `${a.left}%`,\n          width: a.size,\n          height: a.size,\n        }}>\n          <img src={a.image} alt='' />\n        </div>)}\n      </div>\n      <div className=\"floor\">\n        {floorArray.map((diff, i) => <div key={i} className=\"piece\" style={{width: `${100/PIECES_COUNT}%`, height: `${100 - diff}%`}} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\nfunction useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = React.useState(false);\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n  // Add event listeners\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n  return keyPressed;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}